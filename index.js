const { Telegraf } = require('telegraf');
const axios = require('axios');

// üîê –¢–æ–∫–µ–Ω—ã –∏ –∫–ª—é—á–∏
const bot = new Telegraf('7783259149:AAHXlMMC5QYc1vyRsvlA22vE-KSnNBM3-yI');
const ADMIN_ID = '651149105';
const OPENROUTER_API_KEY = 'sk-KJ5Ln0WWYmRLMniOYc4z60IT0RL8On0y';

// üîÅ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç, —è –ú–∏–ª–∞–Ω–∞ üíï –ì–æ—Ç–æ–≤–∞ –±–æ–ª—Ç–∞—Ç—å, —Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å –∏ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º!');
});

// üì© –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ–∫—Å—Ç
bot.on('text', async (ctx) => {
  const userMessage = ctx.message.text;

  try {
    const response = await axios.post(
      'https://api.proxyapi.ru/openai/v1/chat/completions',
      {
        model: 'gpt-4',
        messages: [
          { role: 'system', content: '–¢—ã –¥–µ–≤—É—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –ú–∏–ª–∞–Ω–∞. –¢—ã —Ñ–ª–∏—Ä—Ç—É–µ—à—å, –±–æ–ª—Ç–∞–µ—à—å, –æ—Ç–≤–µ—á–∞–µ—à—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –º–∏–ª–æ. –ü–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ, –Ω–µ —Å—É—Ö–æ, —Å –ª—ë–≥–∫–∏–º —Ñ–ª–∏—Ä—Ç–æ–º –∏ —ç–º–æ–¥–∂–∏.' },
          { role: 'user', content: userMessage }
        ],
        temperature: 0.8
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const reply = response.data.choices[0].message.content;
    ctx.reply(reply);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ AI:', error.response?.data || error.message);
    ctx.reply('–û–π... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üôà –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ!');
  }
});

bot.launch();
console.log('–ë–æ—Ç –ú–∏–ª–∞–Ω–∞ üíï –∑–∞–ø—É—â–µ–Ω');
